package iotc.db;
// Generated 2012/12/12 23:32:12 by Hibernate Tools 3.2.1.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityListeners;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Sensor generated by hbm2java
 */
@Entity
@EntityListeners(iotc.event.JpaEventListener.class)
@Table(name="sensor"
    ,catalog="iotc"
)
public class Sensor  implements java.io.Serializable {


     private Integer id;
     private Device device;
     private SensorType sensorType;
     private String name;
     private Set terms = new HashSet(0);
     private Set sensorValues = new HashSet(0);
     private Set statisticalMethods = new HashSet(0);

    public Sensor() {
    }


    public Sensor(Device device, SensorType sensorType, String name) {
        this.device = device;
        this.sensorType = sensorType;
        this.name = name;
    }
    public Sensor(Device device, SensorType sensorType, String name, Set terms, Set sensorValues, Set statisticalMethods) {
       this.device = device;
       this.sensorType = sensorType;
       this.name = name;
       this.terms = terms;
       this.sensorValues = sensorValues;
       this.statisticalMethods = statisticalMethods;
    }

     @Id @GeneratedValue(strategy=IDENTITY)

    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="device_id", nullable=false)
    public Device getDevice() {
        return this.device;
    }

    public void setDevice(Device device) {
        this.device = device;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="type", nullable=false)
    public SensorType getSensorType() {
        return this.sensorType;
    }

    public void setSensorType(SensorType sensorType) {
        this.sensorType = sensorType;
    }

    @Column(name="name", nullable=false)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }
@ManyToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY)
    @JoinTable(name="ref_term_sensor", catalog="iotc", joinColumns = {
        @JoinColumn(name="sensor", nullable=false, updatable=false) }, inverseJoinColumns = {
        @JoinColumn(name="term", nullable=false, updatable=false) })
    public Set getTerms() {
        return this.terms;
    }

    public void setTerms(Set terms) {
        this.terms = terms;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="sensor")
    public Set getSensorValues() {
        return this.sensorValues;
    }

    public void setSensorValues(Set sensorValues) {
        this.sensorValues = sensorValues;
    }
@ManyToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY)
    @JoinTable(name="ref_method_sensor", catalog="iotc", joinColumns = {
        @JoinColumn(name="sensor", nullable=false, updatable=false) }, inverseJoinColumns = {
        @JoinColumn(name="method", nullable=false, updatable=false) })
    public Set getStatisticalMethods() {
        return this.statisticalMethods;
    }

    public void setStatisticalMethods(Set statisticalMethods) {
        this.statisticalMethods = statisticalMethods;
    }




}


